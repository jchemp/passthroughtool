Private Sub UserForm_Initialize()

Dim Resource_Name As Variant

Resource_Name = VBA.Array("ARVINN_6_ORION1", "BDGRCK_1_UNITS", "BEARMT_1_UNIT", "BIOMAS_1_UNIT 1", "BOGUE_1_UNITA1", "BURNYF_2_UNIT 1", "CALPIN_1_AGNEW", "CHALK_1_UNIT", "COCOPP_2_CTG1", "COCOPP_2_CTG2", "COCOPP_2_CTG3", "COCOPP_2_CTG4", "COCOPP_7_UNIT 6", "COCOPP_7_UNIT 7", "COGNAT_1_UNIT", "DELTA_2_PL1X4", "DOUBLC_1_UNITS", "EXCHEC_7_UNIT 1", "FAIRHV_6_UNIT", "FORBST_7_UNIT 1", "GEYS17_2_BOTRCK", "GILROY_1_UNIT", "GILRPP_1_PL1X2", "GILRPP_1_PL3X4", _
                            "GRNLF1_1_UNITS", "GRSCRK_6_BGCKWW", "GWFPWR_1_UNITS", "HENRTA_6_UNITA1", "HENRTA_6_UNITA2", "IVANPA_1_UNIT1", "IVANPA_1_UNIT3", "JESSUP_1_HUDSON", "KELSO_2_UNITS", "KELYRG_6_UNIT", "KERNFT_1_UNITS", "KINGCO_1_KINGBR", "KNGCTY_6_UNITA1", "LASSEN_6_UNITS", "LECEF_1_UNITS", "LIVOAK_1_UNIT 1", "LMBEPK_2_UNITA1", "LMBEPK_2_UNITA2", "LMBEPK_2_UNITA3", "MALAGA_1_PL1X2", "MCSWAN_6_UNITS", "MENBIO_6_UNIT", "MKTRCK_1_UNIT 1", _
                            "MOSSLD_7_UNIT 6", "MOSSLD_7_UNIT 7", "OMAR_2_UNIT 1", "OMAR_2_UNIT 2", "OMAR_2_UNIT 3", "OMAR_2_UNIT 4", "OROVIL_6_UNIT", "PACLUM_6_UNIT", "PEABDY_2_LNDFL1", "PITTSP_7_UNIT 5", "PITTSP_7_UNIT 6", "PITTSP_7_UNIT 7", "PNCHEG_2_PL1X4", "PNCHPP_1_PL1X2", "RUSCTY_2_UNITS", "RVRVEW_1_UNITA1", "SANDLT_2_SUNITS", "SCHLTE_1_PL1X3", "SIERRA_1_UNITS", "SMPRIP_1_SMPSON", "SUNSHN_2_LNDFL", "SUNSET_2_UNITS", "SLYCRK_1_UNIT 1", "THMENG_1_UNIT 1", "ULTPCH_1_UNIT 1", "ULTPFR_1_UNIT 1", "ULTRCK_2_UNIT", "UNVRSY_1_UNIT 1", "WSENGY_1_UNIT 1", "WOLFSK_1_UNITA1", _
                            "YUBACT_1_SUNSW", "YUBACT_1_SUNSW", "YUBACT_6_UNITA1", "WDLEAF_7_UNIT 1", "KERNRG_1_UNITS", "PCG2_CRAG_I_F_VANTGE")

With Resource_Input
       .Clear
       .List = Resource_Name
       .ListIndex = -1
End With

     
End Sub

Private Sub TextBox1_KeyDown(KeyCode As Integer, Shift As Integer)

' This function is just to allow user to hit the Enter key to submit their Ensuite Credentials

    If KeyCode = 13 Then
         cmdOK_Click
    End If
End Sub
Private Sub cmdCancel_Click()
    Unload Me
End Sub
Private Sub cmdOK_Click()

Dim y As Integer
Dim Resource As Variant
Dim lastrow As Long


'Screen updating/alerts Off
Application.ScreenUpdating = False
Application.DisplayAlerts = False


'Delete extra sheets
    For Each xWs In Application.ActiveWorkbook.Worksheets
        If xWs.Name <> "Introduction" And xWs.Name <> "Data" And xWs.Name <> "AS_NoPays" And xWs.Name <> "AS Summary" Then
            xWs.delete
        End If
    Next

'grab last row of data sheet so that we can append new data to the end
lastrow = Sheets("Data").Cells(Sheets("Data").Rows.Count, "A").End(xlUp).Row

'Clear Previous Data in Data sheet
Sheets("Data").Select
Sheets("AS_NoPays").UsedRange.ClearContents

 ' Loop through the items in the ListBox control.
 y = 1
 For x = 0 To Resource_Input.ListCount - 1
    ' If the item is selected...
    If Resource_Input.Selected(x) = True Then
       '...display the Selected item.
       Z = "'" & Resource_Input.List(x) & "'"
       z1 = z1 & "," & Z
       y = y + 1
    End If
Next x
Resource = Right(z1, Len(z1) - 1)

Set objSession = CreateObject("OracleInProcServer.XOraSession")
Set objdatabase = objSession.OpenDatabase("ENSUIT1P", UserID_Input & "/" & Password_Input, 0)
    
' Close the UserForm.
Unload Me
 
'Enter SQL Statement'
strSql = " WITH DATE_DETAILS AS ( "
strSql = strSql & " SELECT trade_Date "
strSql = strSql & " , BA_ID "
strSql = strSql & " , max(messageheaderid) messageheaderid  "
strSql = strSql & " FROM messageheader "
strSql = strSql & " WHERE trade_date BETWEEN '" & StartDate_Input & "' AND '" & EndDate_Input & "' "
strSql = strSql & "     AND file_type = 'DETERMINANTS' "
strSql = strSql & "     AND run_description NOT LIKE 'MONTHLY%' "
strSql = strSql & " GROUP BY trade_Date, BA_ID "
strSql = strSql & " ) "
strSql = strSql & " SELECT trade_date "
strSql = strSql & " , attributevalue2 "
strSql = strSql & " , run_group_name "
strSql = strSql & " , hour "
strSql = strSql & " , interval "
strSql = strSql & " , ROUND(NVL(LEAST(SPIN_PRICE*LEAST(GREATEST((1-AGC_Flag)*LEAST(SPIN_RT_Cleared_Qty,SPIN_MAIN_CALC),SPIN_AS_Test),SPIN_Awarded_Qty),SPIN_No_Pay_AMT_Total),0) "
strSql = strSql & "         +NVL(LEAST(NSPN_PRICE*LEAST(GREATEST((1-AGC_Flag)*LEAST(NSPN_RT_Cleared_Qty,NSPN_MAIN_CALC),NSPN_AS_Test),NSPN_Awarded_Qty),NSPN_No_Pay_AMT_Total),0) "
strSql = strSql & "         +NVL(LEAST(LEAST(REGUP_Awarded_Qty,REGUP_MAIN_CALC_Qty)*REGUP_PRICE,REGUP_No_Pay_AMT_Total),0) "
strSql = strSql & "         +NVL(LEAST(LEAST(REGDW_Awarded_Qty,REGDW_MAIN_CALC_Qty)*REGDW_PRICE,REGDW_No_Pay_AMT_Total),0),2) AS Total_CP_NoPay "
strSql = strSql & " , ROUND(NVL(SPIN_Awarded_Qty,0),2) AS SPIN_Awarded_Qty "
strSql = strSql & " , ROUND(NVL(SPIN_No_Pay_QTY_Total,0),2) AS SPIN_No_Pay_QTY_Total "
strSql = strSql & " , ROUND(NVL(SPIN_No_Pay_AMT_Total,0),2) AS SPIN_No_Pay_AMT_Total "
strSql = strSql & " , NVL(SPIN_PRICE,0) AS SPIN_PRICE "
strSql = strSql & " , ROUND(NVL(LEAST(GREATEST((1-AGC_Flag)*LEAST(SPIN_RT_Cleared_Qty,SPIN_MAIN_CALC),SPIN_AS_Test),SPIN_Awarded_Qty),0),2) AS SPIN_CP_Qty "
strSql = strSql & " , ROUND(NVL(LEAST(SPIN_PRICE*LEAST(GREATEST((1-AGC_Flag)*LEAST(SPIN_RT_Cleared_Qty,SPIN_MAIN_CALC),SPIN_AS_Test),SPIN_Awarded_Qty),SPIN_No_Pay_AMT_Total),0),2) AS SPIN_CP_NoPay "
strSql = strSql & " , ROUND(NVL(NSPN_Awarded_Qty,0),2) AS NSPN_Awarded_Qty "
strSql = strSql & " , ROUND(NVL(NSPN_No_Pay_QTY_Total,0),2) AS NSPN_No_Pay_QTY_Total "
strSql = strSql & " , ROUND(NVL(NSPN_No_Pay_AMT_Total,0),2) AS NSPN_No_Pay_AMT_Total "
strSql = strSql & " , NVL(NSPN_PRICE,0) AS NSPN_PRICE "
strSql = strSql & " , ROUND(NVL(LEAST(GREATEST((1-AGC_Flag)*LEAST(NSPN_RT_Cleared_Qty,NSPN_MAIN_CALC),NSPN_AS_Test),NSPN_Awarded_Qty),0),2) AS NSPN_CP_Qty "
strSql = strSql & " , ROUND(NVL(LEAST(NSPN_PRICE*LEAST(GREATEST((1-AGC_Flag)*LEAST(NSPN_RT_Cleared_Qty,NSPN_MAIN_CALC),NSPN_AS_Test),NSPN_Awarded_Qty),NSPN_No_Pay_AMT_Total),0),2) AS NSPN_CP_NoPay "
strSql = strSql & " , ROUND(NVL(REGUP_Awarded_Qty,0),2) AS REGUP_Awarded_Qty "
strSql = strSql & " , NVL(REGUP_No_Pay_QTY_Total,0) AS REGUP_No_Pay_QTY_Total "
strSql = strSql & " , NVL(REGUP_No_Pay_AMT_Total,0) AS REGUP_No_Pay_AMT_Total "
strSql = strSql & " , NVL(REGUP_PRICE,0) AS REGUP_PRICE "
strSql = strSql & " , ROUND(NVL(REGUP_MAIN_CALC_Qty,0),2) AS REGUP_CP_Qty "
strSql = strSql & " , ROUND(NVL(LEAST(LEAST(REGUP_Awarded_Qty,REGUP_MAIN_CALC_Qty)*REGUP_PRICE,REGUP_No_Pay_AMT_Total),0),2) AS REGUP_CP_NoPay "
strSql = strSql & " , ROUND(NVL(REGDW_Awarded_Qty,0),2) AS REGDW_Awarded_Qty "
strSql = strSql & " , NVL(REGDW_No_Pay_QTY_Total,0) AS REGDW_No_Pay_QTY_Total "
strSql = strSql & " , NVL(REGDW_No_Pay_AMT_Total,0) AS REGDW_No_Pay_AMT_Total "
strSql = strSql & " , NVL(REGDW_PRICE,0) AS REGDW_PRICE "
strSql = strSql & " , ROUND(NVL(REGDW_MAIN_CALC_Qty,0),2) AS REGDW_CP_Qty "
strSql = strSql & " , ROUND(NVL(LEAST(LEAST(REGDW_Awarded_Qty,REGDW_MAIN_CALC_Qty)*REGDW_PRICE,REGDW_No_Pay_AMT_Total),0),2) AS REGDW_CP_NoPay "
strSql = strSql & " , ROUND(NVL(SPIN_AS_Test,0),2) AS SPIN_AS_Test_P "
strSql = strSql & " , ROUND(NVL(SPIN_Unavail,0),2) AS SPIN_Unavail_P "
strSql = strSql & " , ROUND(NVL(SPIN_Undeliv,0),2) AS SPIN_Undeliv_P "
strSql = strSql & " , ROUND(NVL(SPIN_Unsync,0),2) AS SPIN_Unsync_P "
strSql = strSql & " , ROUND(NVL(SPIN_Constraint_DQ,0),2) AS SPIN_Constraint_DQ_NP "
strSql = strSql & " , ROUND(NVL(SPIN_Undisp,0),2) AS SPIN_Undisp_NP "
strSql = strSql & " , ROUND(NVL(SPIN_Declined,0),2) AS SPIN_Declined_NP "
strSql = strSql & " , ROUND(NVL(SPIN_Untag,0),2) AS SPIN_Untag_NP "
strSql = strSql & " , ROUND(NVL(NSPN_AS_Test,0),2) AS NSPN_AS_Test_P "
strSql = strSql & " , ROUND(NVL(NSPN_Unavail,0),2) AS NSPN_Unavail_P "
strSql = strSql & " , ROUND(NVL(NSPN_Undeliv,0),2) AS NSPN_Undeliv_P "
strSql = strSql & " , ROUND(NVL(NSPN_Unsync,0),2) AS NSPN_Unsync_P "
strSql = strSql & " , ROUND(NVL(NSPN_Constraint_DQ,0),2) AS NSPN_Constraint_DQ_NP "
strSql = strSql & " , ROUND(NVL(NSPN_Undisp,0),2) AS NSPN_Undisp_NP "
strSql = strSql & " , ROUND(NVL(NSPN_Declined,0),2) AS NSPN_Declined_NP "
strSql = strSql & " , ROUND(NVL(NSPN_Untag,0),2) AS NSPN_Untag_NP "
strSql = strSql & " , NVL(REGUP_Comm_Error_P,0) AS REGUP_Comm_Error_P "
strSql = strSql & " , NVL(REGUP_Off_Ctrl_AGC_P,0) AS REGUP_Off_Ctrl_AGC_P "
strSql = strSql & " , NVL(REGUP_Outage_P,0) AS REGUP_Outage_P "
strSql = strSql & " , NVL(REGUP_Out_of_Range_P,0) AS REGUP_Out_of_Range_P "
strSql = strSql & " , NVL(REGUP_Constraint_DQ_NP,0) AS REGUP_Constraint_DQ_NP "
strSql = strSql & " , NVL(REGUP_Constrained_LackRange_NP,0) AS REGUP_Constrained_LackRange_NP "
strSql = strSql & " , NVL(REGDW_Comm_Error_P,0) AS REGDW_Comm_Error_P "
strSql = strSql & " , NVL(REGDW_Off_Ctrl_AGC_P,0) AS REGDW_Off_Ctrl_AGC_P "
strSql = strSql & " , NVL(REGDW_Outage_P,0) AS REGDW_Outage_P "
strSql = strSql & " , NVL(REGDW_Out_of_Range_P,0) AS REGDW_Out_of_Range_P "
strSql = strSql & " , NVL(REGDW_Constraint_DQ_NP,0) AS REGDW_Constraint_DQ_NP "
strSql = strSql & " , NVL(REGDW_Constrained_LackRange_NP,0) AS REGDW_Constrained_LackRange_NP "
strSql = strSql & " FROM "
strSql = strSql & "     ( "
strSql = strSql & "     SELECT trade_date "
strSql = strSql & "     , attributevalue2 "
strSql = strSql & "     , run_group_name "
strSql = strSql & "     , hour "
strSql = strSql & "     , interval "
strSql = strSql & "     , SUM(NVL(AGC_Flag,0)) AS AGC_Flag "
strSql = strSql & "     , SUM(SPIN_RT_Cleared_Qty)/12 AS SPIN_RT_Cleared_Qty "
strSql = strSql & "     , SUM(SPIN_Awarded_Qty)/12 AS SPIN_Awarded_Qty "
strSql = strSql & "     , SUM(SPIN_No_Pay_QTY_Total) AS SPIN_No_Pay_QTY_Total "
strSql = strSql & "     , SUM(SPIN_No_Pay_AMT_Total) AS SPIN_No_Pay_AMT_Total "
strSql = strSql & "     , SUM(NVL(SPIN_AS_Test,0)) AS SPIN_AS_Test "
strSql = strSql & "     , SUM(SPIN_Unavail) AS SPIN_Unavail "
strSql = strSql & "     , SUM(SPIN_Undeliv) AS SPIN_Undeliv "
strSql = strSql & "     , SUM(SPIN_Unsync) AS SPIN_Unsync "
strSql = strSql & "     , SUM(SPIN_Constraint_DQ) AS SPIN_Constraint_DQ "
strSql = strSql & "     , SUM(SPIN_Undisp) AS SPIN_Undisp "
strSql = strSql & "     , SUM(NVL(SPIN_Declined,0)) AS SPIN_Declined "
strSql = strSql & "     , SUM(NVL(SPIN_Untag,0))/12 AS SPIN_Untag "
strSql = strSql & "     , SUM(GREATEST(0, SPIN_PRICE_COMP)) AS SPIN_PRICE "
strSql = strSql & "     , SUM(SPIN_MAIN_CALC) AS SPIN_MAIN_CALC "
strSql = strSql & "     , SUM(NSPN_RT_Cleared_Qty)/12 AS NSPN_RT_Cleared_Qty "
strSql = strSql & "     , SUM(NSPN_Awarded_Qty)/12 AS NSPN_Awarded_Qty "
strSql = strSql & "     , SUM(NSPN_No_Pay_QTY_Total) AS NSPN_No_Pay_QTY_Total "
strSql = strSql & "     , SUM(NSPN_No_Pay_AMT_Total) AS NSPN_No_Pay_AMT_Total "
strSql = strSql & "     , SUM(NVL(NSPN_AS_Test,0)) AS NSPN_AS_Test "
strSql = strSql & "     , SUM(NSPN_Unavail) AS NSPN_Unavail "
strSql = strSql & "     , SUM(NSPN_Undeliv) AS NSPN_Undeliv "
strSql = strSql & "     , SUM(NSPN_Unsync) AS NSPN_Unsync "
strSql = strSql & "     , SUM(NSPN_Constraint_DQ) AS NSPN_Constraint_DQ "
strSql = strSql & "     , SUM(NSPN_Undisp) AS NSPN_Undisp "
strSql = strSql & "     , SUM(NVL(NSPN_Declined,0)) AS NSPN_Declined "
strSql = strSql & "     , SUM(NVL(NSPN_Untag,0))/12 AS NSPN_Untag "
strSql = strSql & "     , SUM(GREATEST(0, NSPN_PRICE_COMP)) AS NSPN_PRICE "
strSql = strSql & "     , SUM(NSPN_MAIN_CALC) AS NSPN_MAIN_CALC "
strSql = strSql & "     , SUM(REGUP_Awarded_Qty)/12 AS REGUP_Awarded_Qty "
strSql = strSql & "     , ROUND(SUM(REGUP_No_Pay_QTY_Total),2) AS REGUP_No_Pay_QTY_Total "
strSql = strSql & "     , ROUND(SUM(REGUP_No_Pay_AMT_Total),2) AS REGUP_No_Pay_AMT_Total "
strSql = strSql & "     , ROUND(SUM(REGUP_Comm_Error)/12,2) AS REGUP_Comm_Error_P "
strSql = strSql & "     , ROUND(SUM(REGUP_Off_Ctrl_AGC)/12,2) AS REGUP_Off_Ctrl_AGC_P "
strSql = strSql & "     , ROUND(SUM(REGUP_Outage)/12,2) AS REGUP_Outage_P "
strSql = strSql & "     , ROUND(SUM(REGUP_Out_of_Range)/12,2) AS REGUP_Out_of_Range_P "
strSql = strSql & "     , ROUND(SUM(REGUP_Constraint_DQ)/12,2) AS REGUP_Constraint_DQ_NP "
strSql = strSql & "     , ROUND(SUM(REGUP_Constrained_LackRange)/12,2) AS REGUP_Constrained_LackRange_NP "
strSql = strSql & "     , SUM(GREATEST(0, REGUP_PRICE_COMP)) AS REGUP_PRICE "
strSql = strSql & "     , MAX(REGUP_MAIN_CALC)/12 AS REGUP_MAIN_CALC_Qty "
strSql = strSql & "     , SUM(REGDW_Awarded_Qty)/12 AS REGDW_Awarded_Qty "
strSql = strSql & "     , ROUND(SUM(REGDW_No_Pay_QTY_Total),2) AS REGDW_No_Pay_QTY_Total "
strSql = strSql & "     , ROUND(SUM(REGDW_No_Pay_AMT_Total),2) AS REGDW_No_Pay_AMT_Total "
strSql = strSql & "     , ROUND(SUM(REGDW_Comm_Error)/12,2) AS REGDW_Comm_Error_P "
strSql = strSql & "     , ROUND(SUM(REGDW_Off_Ctrl_AGC)/12,2) AS REGDW_Off_Ctrl_AGC_P "
strSql = strSql & "     , ROUND(SUM(REGDW_Outage)/12,2) AS REGDW_Outage_P "
strSql = strSql & "     , ROUND(SUM(REGDW_Out_of_Range)/12,2) AS REGDW_Out_of_Range_P "
strSql = strSql & "     , ROUND(SUM(REGDW_Constraint_DQ)/12,2) AS REGDW_Constraint_DQ_NP "
strSql = strSql & "     , ROUND(SUM(REGDW_Constrained_LackRange)/12,2) AS REGDW_Constrained_LackRange_NP "
strSql = strSql & "     , SUM(GREATEST(0, REGDW_PRICE_COMP)) AS REGDW_PRICE "
strSql = strSql & "     , MAX(REGDW_MAIN_CALC)/12 AS REGDW_MAIN_CALC_Qty "
strSql = strSql & "     FROM "
strSql = strSql & "         ( "
strSql = strSql & "         SELECT trade_date "
strSql = strSql & "         , attributevalue2 "
strSql = strSql & "         , run_group_name "
strSql = strSql & "         , hour "
strSql = strSql & "         , interval "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_AGC@FLAG' THEN VALUE END AS AGC_Flag "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_TOT_SPIN_DA_RT_AWARD@QUANTITY' THEN VALUE END AS SPIN_Awarded_Qty "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_NO_PAY_SPIN_AWARD@QUANTITY' THEN VALUE END AS SPIN_No_Pay_QTY_Total "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_NOPAY_SPIN_STLMT@AMOUNT' THEN VALUE END AS SPIN_No_Pay_AMT_Total "
strSql = strSql & "         , CASE WHEN name = 'BA_15M_RSRC_RT_SPIN_CLEARED_QTY' THEN VALUE END AS SPIN_RT_Cleared_Qty "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_AS_TEST_RESC_SPIN@QUANTITY' THEN VALUE END AS SPIN_AS_Test "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_UNAVAIL_SPIN_CAP@QUANTITY' THEN VALUE END AS SPIN_Unavail "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_UNDELV_SPIN_CAP@QUANTITY' THEN VALUE END AS SPIN_Undeliv "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_UNSYNCHRONIZED_SPIN_RSRV_BILL@QUANTITY' THEN VALUE END AS SPIN_Unsync "
strSql = strSql & "         , CASE WHEN name = 'BA_15M_RSRC_RT_SPIN_CONSTRAINT_DQ@QUANTITY' THEN VALUE/12 END AS SPIN_Constraint_DQ "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_UNDISP_SPIN_CAP@QUANTITY' THEN VALUE END AS SPIN_Undisp       "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_DECLINED_NSPN_CAP@QUANTITY' THEN VALUE END AS SPIN_Declined "
strSql = strSql & "         , CASE WHEN name = 'BA_15M_RSRC_UNTAG_SPIN_CAP_HPD_TG@QUANTITY' THEN VALUE END AS SPIN_Untag           "
strSql = strSql & "         , CASE WHEN name = 'BA_15M_RSRC_NOPAY_SPIN_STLMT@PRICE' THEN VALUE END AS SPIN_PRICE_COMP "
strSql = strSql & "         , CASE WHEN name IN ('BA_5M_RSRC_UNDELV_SPIN_CAP@QUANTITY', 'BA_5M_RSRC_UNAVAIL_SPIN_CAP@QUANTITY','BA_5M_RSRC_UNSYNCHRONIZED_SPIN_RSRV_BILL@QUANTITY') THEN VALUE END AS SPIN_MAIN_CALC "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_TOT_NSPN_DA_RT_AWARD@QUANTITY' THEN VALUE END AS NSPN_Awarded_Qty "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_NO_PAY_NSPN_AWARD@QUANTITY' THEN VALUE END AS NSPN_No_Pay_QTY_Total "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_NOPAY_NSPN_STLMT@AMOUNT' THEN VALUE END AS NSPN_No_Pay_AMT_Total "
strSql = strSql & "         , CASE WHEN name = 'BA_15M_RSRC_RT_NSPN_CLEARED_QTY' THEN VALUE END AS NSPN_RT_Cleared_Qty "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_AS_TEST_RESC_NSPN@QUANTITY' THEN VALUE END AS NSPN_AS_Test "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_UNAVAIL_NSPN_CAP@QUANTITY' THEN VALUE END AS NSPN_Unavail "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_UNDELV_NSPN_CAP@QUANTITY' THEN VALUE END AS NSPN_Undeliv "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_UNSYNCHRONIZED_NSPN_RSRV_BILL@QUANTITY' THEN VALUE END AS NSPN_Unsync "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_CONSTRAINT_DQ_NO_PAY_NSPN@QUANTITY' THEN VALUE END AS NSPN_Constraint_DQ "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_UNDISP_NSPN_CAP@QUANTITY' THEN VALUE END AS NSPN_Undisp "
strSql = strSql & "         , CASE WHEN name = 'BA_5M_RSRC_DECLINED_NSPN_CAP@QUANTITY' THEN VALUE END AS NSPN_Declined "
strSql = strSql & "         , CASE WHEN name = 'BA_15M_RSRC_UNTAG_NSPN_CAP_HPD_TG@QUANTITY' THEN VALUE END AS NSPN_Untag           "
strSql = strSql & "         , CASE WHEN name = 'BA_15M_RSRC_NOPAY_NSPN_STLMT@PRICE' THEN VALUE END AS NSPN_PRICE_COMP "
strSql = strSql & "         , CASE WHEN name IN ('BA_5M_RSRC_UNDELV_NSPN_CAP@QUANTITY', 'BA_5M_RSRC_UNAVAIL_NSPN_CAP@QUANTITY', 'BA_5M_RSRC_UNSYNCHRONIZED_NSPN_RSRV_BILL@QUANTITY') THEN VALUE END AS NSPN_MAIN_CALC "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGUP_TOT_AWARD_CAP@QUANTITY') THEN VALUE END AS REGUP_Awarded_Qty "
strSql = strSql & "         , CASE WHEN name IN ('BA_5M_RSRC_NOPAY_REGUP_BID@QUANTITY') THEN VALUE END AS REGUP_No_Pay_QTY_Total "
strSql = strSql & "         , CASE WHEN name IN ('BA_5M_RSRC_NOPAY_REGUP@AMOUNT') THEN VALUE END AS REGUP_No_Pay_AMT_Total "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_RT_REGUP_CONSTRAINT_DQ@QUANTITY') THEN VALUE END AS REGUP_Constraint_DQ "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGUP_CONSTRAINED_MW@QUANTITY') THEN VALUE END AS REGUP_Constrained_LackRange "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGUP_COMM_ERROR_MW@QUANTITY') THEN VALUE END AS REGUP_Comm_Error "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGUP_OFF_CTRL_MW@QUANTITY') THEN VALUE END AS REGUP_Off_Ctrl_AGC "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGUP_OUTAGE_MW@QUANTITY') THEN VALUE END AS REGUP_Outage "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGUP_OUT_OF_RANGE_MW@QUANTITY') THEN VALUE END AS REGUP_Out_of_Range "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_NOPAY_REGUP@PRICE') THEN VALUE END AS REGUP_PRICE_COMP "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGUP_COMM_ERROR_MW@QUANTITY', 'BA_15M_RSRC_REGUP_OFF_CTRL_MW@QUANTITY', 'BA_15M_RSRC_REGUP_OUTAGE_MW@QUANTITY' "
strSql = strSql & "                             , 'BA_15M_RSRC_REGUP_OUT_OF_RANGE_MW@QUANTITY') THEN VALUE END AS REGUP_MAIN_CALC "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGDOWN_TOT_AWARD_CAP@QUANTITY') THEN VALUE END AS REGDW_Awarded_Qty "
strSql = strSql & "         , CASE WHEN name IN ('BA_5M_RSRC_NOPAY_REGDOWN_BID@QUANTITY') THEN VALUE END AS REGDW_No_Pay_QTY_Total "
strSql = strSql & "         , CASE WHEN name IN ('BA_5M_RSRC_NOPAY_REGDOWN_STLMT@AMOUNT') THEN VALUE END AS REGDW_No_Pay_AMT_Total "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_RT_REGDOWN_CONSTRAINT_DQ@QUANTITY') THEN VALUE END AS REGDW_Constraint_DQ "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGDOWN_CONSTRAINED_MW@QUANTITY') THEN VALUE END AS REGDW_Constrained_LackRange "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGDOWN_COMM_ERROR_MW@QUANTITY') THEN VALUE END AS REGDW_Comm_Error "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGDOWN_OFF_CTRL_MW@QUANTITY') THEN VALUE END AS REGDW_Off_Ctrl_AGC "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGDOWN_OUTAGE_MW@QUANTITY') THEN VALUE END AS REGDW_Outage "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGDOWN_OUT_OF_RANGE_MW@QUANTITY') THEN VALUE END AS REGDW_Out_of_Range "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_NOPAY_REGDOWN_STLMT@PRICE') THEN VALUE END AS REGDW_PRICE_COMP "
strSql = strSql & "         , CASE WHEN name IN ('BA_15M_RSRC_REGDOWN_COMM_ERROR_MW@QUANTITY', 'BA_15M_RSRC_REGDOWN_OFF_CTRL_MW@QUANTITY', 'BA_15M_RSRC_REGDOWN_OUTAGE_MW@QUANTITY' "
strSql = strSql & "                             , 'BA_15M_RSRC_REGDOWN_OUT_OF_RANGE_MW@QUANTITY') THEN VALUE END AS REGDW_MAIN_CALC "
strSql = strSql & "         FROM  "
strSql = strSql & "             ( "
strSql = strSql & "             SELECT bd.trade_date "
strSql = strSql & "             , bd.attributevalue2 "
strSql = strSql & "             , mh.run_group_name "
strSql = strSql & "             , ti.hour "
strSql = strSql & "             , ti.interval "
strSql = strSql & "             , bd.name "
strSql = strSql & "             , CASE ti.interval "
strSql = strSql & "                 WHEN 1 THEN to_number(NVL(bd.int001,0)) "
strSql = strSql & "                 WHEN 2 THEN to_number(NVL(bd.int002,0)) "
strSql = strSql & "                 WHEN 3 THEN to_number(NVL(bd.int003,0)) "
strSql = strSql & "                 WHEN 4 THEN to_number(NVL(bd.int004,0)) "
strSql = strSql & "                 WHEN 5 THEN to_number(NVL(bd.int005,0)) "
strSql = strSql & "                 WHEN 6 THEN to_number(NVL(bd.int006,0)) "
strSql = strSql & "                 WHEN 7 THEN to_number(NVL(bd.int007,0)) "
strSql = strSql & "                 WHEN 8 THEN to_number(NVL(bd.int008,0)) "
strSql = strSql & "                 WHEN 9 THEN to_number(NVL(bd.int009,0)) "
strSql = strSql & "                 WHEN 10 THEN to_number(NVL(bd.int010,0)) "
strSql = strSql & "                 WHEN 11 THEN to_number(NVL(bd.int011,0)) "
strSql = strSql & "                 WHEN 12 THEN to_number(NVL(bd.int012,0)) "
strSql = strSql & "                 WHEN 13 THEN to_number(NVL(bd.int013,0)) "
strSql = strSql & "                 WHEN 14 THEN to_number(NVL(bd.int014,0)) "
strSql = strSql & "                 WHEN 15 THEN to_number(NVL(bd.int015,0)) "
strSql = strSql & "                 WHEN 16 THEN to_number(NVL(bd.int016,0)) "
strSql = strSql & "                 WHEN 17 THEN to_number(NVL(bd.int017,0)) "
strSql = strSql & "                 WHEN 18 THEN to_number(NVL(bd.int018,0)) "
strSql = strSql & "                 WHEN 19 THEN to_number(NVL(bd.int019,0)) "
strSql = strSql & "                 WHEN 20 THEN to_number(NVL(bd.int020,0)) "
strSql = strSql & "                 WHEN 21 THEN to_number(NVL(bd.int021,0)) "
strSql = strSql & "                 WHEN 22 THEN to_number(NVL(bd.int022,0)) "
strSql = strSql & "                 WHEN 23 THEN to_number(NVL(bd.int023,0)) "
strSql = strSql & "                 WHEN 24 THEN to_number(NVL(bd.int024,0)) "
strSql = strSql & "                 WHEN 25 THEN to_number(NVL(bd.int025,0)) "
strSql = strSql & "                 WHEN 26 THEN to_number(NVL(bd.int026,0)) "
strSql = strSql & "                 WHEN 27 THEN to_number(NVL(bd.int027,0)) "
strSql = strSql & "                 WHEN 28 THEN to_number(NVL(bd.int028,0)) "
strSql = strSql & "                 WHEN 29 THEN to_number(NVL(bd.int029,0)) "
strSql = strSql & "                 WHEN 30 THEN to_number(NVL(bd.int030,0)) "
strSql = strSql & "                 WHEN 31 THEN to_number(NVL(bd.int031,0)) "
strSql = strSql & "                 WHEN 32 THEN to_number(NVL(bd.int032,0)) "
strSql = strSql & "                 WHEN 33 THEN to_number(NVL(bd.int033,0)) "
strSql = strSql & "                 WHEN 34 THEN to_number(NVL(bd.int034,0)) "
strSql = strSql & "                 WHEN 35 THEN to_number(NVL(bd.int035,0)) "
strSql = strSql & "                 WHEN 36 THEN to_number(NVL(bd.int036,0)) "
strSql = strSql & "                 WHEN 37 THEN to_number(NVL(bd.int037,0)) "
strSql = strSql & "                 WHEN 38 THEN to_number(NVL(bd.int038,0)) "
strSql = strSql & "                 WHEN 39 THEN to_number(NVL(bd.int039,0)) "
strSql = strSql & "                 WHEN 40 THEN to_number(NVL(bd.int040,0)) "
strSql = strSql & "                 WHEN 41 THEN to_number(NVL(bd.int041,0)) "
strSql = strSql & "                 WHEN 42 THEN to_number(NVL(bd.int042,0)) "
strSql = strSql & "                 WHEN 43 THEN to_number(NVL(bd.int043,0)) "
strSql = strSql & "                 WHEN 44 THEN to_number(NVL(bd.int044,0)) "
strSql = strSql & "                 WHEN 45 THEN to_number(NVL(bd.int045,0)) "
strSql = strSql & "                 WHEN 46 THEN to_number(NVL(bd.int046,0)) "
strSql = strSql & "                 WHEN 47 THEN to_number(NVL(bd.int047,0)) "
strSql = strSql & "                 WHEN 48 THEN to_number(NVL(bd.int048,0)) "
strSql = strSql & "                 WHEN 49 THEN to_number(NVL(bd.int049,0)) "
strSql = strSql & "                 WHEN 50 THEN to_number(NVL(bd.int050,0)) "
strSql = strSql & "                 WHEN 51 THEN to_number(NVL(bd.int051,0)) "
strSql = strSql & "                 WHEN 52 THEN to_number(NVL(bd.int052,0)) "
strSql = strSql & "                 WHEN 53 THEN to_number(NVL(bd.int053,0)) "
strSql = strSql & "                 WHEN 54 THEN to_number(NVL(bd.int054,0)) "
strSql = strSql & "                 WHEN 55 THEN to_number(NVL(bd.int055,0)) "
strSql = strSql & "                 WHEN 56 THEN to_number(NVL(bd.int056,0)) "
strSql = strSql & "                 WHEN 57 THEN to_number(NVL(bd.int057,0)) "
strSql = strSql & "                 WHEN 58 THEN to_number(NVL(bd.int058,0)) "
strSql = strSql & "                 WHEN 59 THEN to_number(NVL(bd.int059,0)) "
strSql = strSql & "                 WHEN 60 THEN to_number(NVL(bd.int060,0)) "
strSql = strSql & "                 WHEN 61 THEN to_number(NVL(bd.int061,0)) "
strSql = strSql & "                 WHEN 62 THEN to_number(NVL(bd.int062,0)) "
strSql = strSql & "                 WHEN 63 THEN to_number(NVL(bd.int063,0)) "
strSql = strSql & "                 WHEN 64 THEN to_number(NVL(bd.int064,0)) "
strSql = strSql & "                 WHEN 65 THEN to_number(NVL(bd.int065,0)) "
strSql = strSql & "                 WHEN 66 THEN to_number(NVL(bd.int066,0)) "
strSql = strSql & "                 WHEN 67 THEN to_number(NVL(bd.int067,0)) "
strSql = strSql & "                 WHEN 68 THEN to_number(NVL(bd.int068,0)) "
strSql = strSql & "                 WHEN 69 THEN to_number(NVL(bd.int069,0)) "
strSql = strSql & "                 WHEN 70 THEN to_number(NVL(bd.int070,0)) "
strSql = strSql & "                 WHEN 71 THEN to_number(NVL(bd.int071,0)) "
strSql = strSql & "                 WHEN 72 THEN to_number(NVL(bd.int072,0)) "
strSql = strSql & "                 WHEN 73 THEN to_number(NVL(bd.int073,0)) "
strSql = strSql & "                 WHEN 74 THEN to_number(NVL(bd.int074,0)) "
strSql = strSql & "                 WHEN 75 THEN to_number(NVL(bd.int075,0)) "
strSql = strSql & "                 WHEN 76 THEN to_number(NVL(bd.int076,0)) "
strSql = strSql & "                 WHEN 77 THEN to_number(NVL(bd.int077,0)) "
strSql = strSql & "                 WHEN 78 THEN to_number(NVL(bd.int078,0)) "
strSql = strSql & "                 WHEN 79 THEN to_number(NVL(bd.int079,0)) "
strSql = strSql & "                 WHEN 80 THEN to_number(NVL(bd.int080,0)) "
strSql = strSql & "                 WHEN 81 THEN to_number(NVL(bd.int081,0)) "
strSql = strSql & "                 WHEN 82 THEN to_number(NVL(bd.int082,0)) "
strSql = strSql & "                 WHEN 83 THEN to_number(NVL(bd.int083,0)) "
strSql = strSql & "                 WHEN 84 THEN to_number(NVL(bd.int084,0)) "
strSql = strSql & "                 WHEN 85 THEN to_number(NVL(bd.int085,0)) "
strSql = strSql & "                 WHEN 86 THEN to_number(NVL(bd.int086,0)) "
strSql = strSql & "                 WHEN 87 THEN to_number(NVL(bd.int087,0)) "
strSql = strSql & "                 WHEN 88 THEN to_number(NVL(bd.int088,0)) "
strSql = strSql & "                 WHEN 89 THEN to_number(NVL(bd.int089,0)) "
strSql = strSql & "                 WHEN 90 THEN to_number(NVL(bd.int090,0)) "
strSql = strSql & "                 WHEN 91 THEN to_number(NVL(bd.int091,0)) "
strSql = strSql & "                 WHEN 92 THEN to_number(NVL(bd.int092,0)) "
strSql = strSql & "                 WHEN 93 THEN to_number(NVL(bd.int093,0)) "
strSql = strSql & "                 WHEN 94 THEN to_number(NVL(bd.int094,0)) "
strSql = strSql & "                 WHEN 95 THEN to_number(NVL(bd.int095,0)) "
strSql = strSql & "                 WHEN 96 THEN to_number(NVL(bd.int096,0)) "
strSql = strSql & "                 WHEN 97 THEN to_number(NVL(bd.int097,0)) "
strSql = strSql & "                 WHEN 98 THEN to_number(NVL(bd.int098,0)) "
strSql = strSql & "                 WHEN 99 THEN to_number(NVL(bd.int099,0)) "
strSql = strSql & "                 WHEN 100 THEN to_number(NVL(bd.int100,0)) "
strSql = strSql & "                 WHEN 101 THEN to_number(NVL(bd.int101,0)) "
strSql = strSql & "                 WHEN 102 THEN to_number(NVL(bd.int102,0)) "
strSql = strSql & "                 WHEN 103 THEN to_number(NVL(bd.int103,0)) "
strSql = strSql & "                 WHEN 104 THEN to_number(NVL(bd.int104,0)) "
strSql = strSql & "                 WHEN 105 THEN to_number(NVL(bd.int105,0)) "
strSql = strSql & "                 WHEN 106 THEN to_number(NVL(bd.int106,0)) "
strSql = strSql & "                 WHEN 107 THEN to_number(NVL(bd.int107,0)) "
strSql = strSql & "                 WHEN 108 THEN to_number(NVL(bd.int108,0)) "
strSql = strSql & "                 WHEN 109 THEN to_number(NVL(bd.int109,0)) "
strSql = strSql & "                 WHEN 110 THEN to_number(NVL(bd.int110,0)) "
strSql = strSql & "                 WHEN 111 THEN to_number(NVL(bd.int111,0)) "
strSql = strSql & "                 WHEN 112 THEN to_number(NVL(bd.int112,0)) "
strSql = strSql & "                 WHEN 113 THEN to_number(NVL(bd.int113,0)) "
strSql = strSql & "                 WHEN 114 THEN to_number(NVL(bd.int114,0)) "
strSql = strSql & "                 WHEN 115 THEN to_number(NVL(bd.int115,0)) "
strSql = strSql & "                 WHEN 116 THEN to_number(NVL(bd.int116,0)) "
strSql = strSql & "                 WHEN 117 THEN to_number(NVL(bd.int117,0)) "
strSql = strSql & "                 WHEN 118 THEN to_number(NVL(bd.int118,0)) "
strSql = strSql & "                 WHEN 119 THEN to_number(NVL(bd.int119,0)) "
strSql = strSql & "                 WHEN 120 THEN to_number(NVL(bd.int120,0)) "
strSql = strSql & "                 WHEN 121 THEN to_number(NVL(bd.int121,0)) "
strSql = strSql & "                 WHEN 122 THEN to_number(NVL(bd.int122,0)) "
strSql = strSql & "                 WHEN 123 THEN to_number(NVL(bd.int123,0)) "
strSql = strSql & "                 WHEN 124 THEN to_number(NVL(bd.int124,0)) "
strSql = strSql & "                 WHEN 125 THEN to_number(NVL(bd.int125,0)) "
strSql = strSql & "                 WHEN 126 THEN to_number(NVL(bd.int126,0)) "
strSql = strSql & "                 WHEN 127 THEN to_number(NVL(bd.int127,0)) "
strSql = strSql & "                 WHEN 128 THEN to_number(NVL(bd.int128,0)) "
strSql = strSql & "                 WHEN 129 THEN to_number(NVL(bd.int129,0)) "
strSql = strSql & "                 WHEN 130 THEN to_number(NVL(bd.int130,0)) "
strSql = strSql & "                 WHEN 131 THEN to_number(NVL(bd.int131,0)) "
strSql = strSql & "                 WHEN 132 THEN to_number(NVL(bd.int132,0)) "
strSql = strSql & "                 WHEN 133 THEN to_number(NVL(bd.int133,0)) "
strSql = strSql & "                 WHEN 134 THEN to_number(NVL(bd.int134,0)) "
strSql = strSql & "                 WHEN 135 THEN to_number(NVL(bd.int135,0)) "
strSql = strSql & "                 WHEN 136 THEN to_number(NVL(bd.int136,0)) "
strSql = strSql & "                 WHEN 137 THEN to_number(NVL(bd.int137,0)) "
strSql = strSql & "                 WHEN 138 THEN to_number(NVL(bd.int138,0)) "
strSql = strSql & "                 WHEN 139 THEN to_number(NVL(bd.int139,0)) "
strSql = strSql & "                 WHEN 140 THEN to_number(NVL(bd.int140,0)) "
strSql = strSql & "                 WHEN 141 THEN to_number(NVL(bd.int141,0)) "
strSql = strSql & "                 WHEN 142 THEN to_number(NVL(bd.int142,0)) "
strSql = strSql & "                 WHEN 143 THEN to_number(NVL(bd.int143,0)) "
strSql = strSql & "                 WHEN 144 THEN to_number(NVL(bd.int144,0)) "
strSql = strSql & "                 WHEN 145 THEN to_number(NVL(bd.int145,0)) "
strSql = strSql & "                 WHEN 146 THEN to_number(NVL(bd.int146,0)) "
strSql = strSql & "                 WHEN 147 THEN to_number(NVL(bd.int147,0)) "
strSql = strSql & "                 WHEN 148 THEN to_number(NVL(bd.int148,0)) "
strSql = strSql & "                 WHEN 149 THEN to_number(NVL(bd.int149,0)) "
strSql = strSql & "                 WHEN 150 THEN to_number(NVL(bd.int150,0)) "
strSql = strSql & "                 WHEN 151 THEN to_number(NVL(bd.int151,0)) "
strSql = strSql & "                 WHEN 152 THEN to_number(NVL(bd.int152,0)) "
strSql = strSql & "                 WHEN 153 THEN to_number(NVL(bd.int153,0)) "
strSql = strSql & "                 WHEN 154 THEN to_number(NVL(bd.int154,0)) "
strSql = strSql & "                 WHEN 155 THEN to_number(NVL(bd.int155,0)) "
strSql = strSql & "                 WHEN 156 THEN to_number(NVL(bd.int156,0)) "
strSql = strSql & "                 WHEN 157 THEN to_number(NVL(bd.int157,0)) "
strSql = strSql & "                 WHEN 158 THEN to_number(NVL(bd.int158,0)) "
strSql = strSql & "                 WHEN 159 THEN to_number(NVL(bd.int159,0)) "
strSql = strSql & "                 WHEN 160 THEN to_number(NVL(bd.int160,0)) "
strSql = strSql & "                 WHEN 161 THEN to_number(NVL(bd.int161,0)) "
strSql = strSql & "                 WHEN 162 THEN to_number(NVL(bd.int162,0)) "
strSql = strSql & "                 WHEN 163 THEN to_number(NVL(bd.int163,0)) "
strSql = strSql & "                 WHEN 164 THEN to_number(NVL(bd.int164,0)) "
strSql = strSql & "                 WHEN 165 THEN to_number(NVL(bd.int165,0)) "
strSql = strSql & "                 WHEN 166 THEN to_number(NVL(bd.int166,0)) "
strSql = strSql & "                 WHEN 167 THEN to_number(NVL(bd.int167,0)) "
strSql = strSql & "                 WHEN 168 THEN to_number(NVL(bd.int168,0)) "
strSql = strSql & "                 WHEN 169 THEN to_number(NVL(bd.int169,0)) "
strSql = strSql & "                 WHEN 170 THEN to_number(NVL(bd.int170,0)) "
strSql = strSql & "                 WHEN 171 THEN to_number(NVL(bd.int171,0)) "
strSql = strSql & "                 WHEN 172 THEN to_number(NVL(bd.int172,0)) "
strSql = strSql & "                 WHEN 173 THEN to_number(NVL(bd.int173,0)) "
strSql = strSql & "                 WHEN 174 THEN to_number(NVL(bd.int174,0)) "
strSql = strSql & "                 WHEN 175 THEN to_number(NVL(bd.int175,0)) "
strSql = strSql & "                 WHEN 176 THEN to_number(NVL(bd.int176,0)) "
strSql = strSql & "                 WHEN 177 THEN to_number(NVL(bd.int177,0)) "
strSql = strSql & "                 WHEN 178 THEN to_number(NVL(bd.int178,0)) "
strSql = strSql & "                 WHEN 179 THEN to_number(NVL(bd.int179,0)) "
strSql = strSql & "                 WHEN 180 THEN to_number(NVL(bd.int180,0)) "
strSql = strSql & "                 WHEN 181 THEN to_number(NVL(bd.int181,0)) "
strSql = strSql & "                 WHEN 182 THEN to_number(NVL(bd.int182,0)) "
strSql = strSql & "                 WHEN 183 THEN to_number(NVL(bd.int183,0)) "
strSql = strSql & "                 WHEN 184 THEN to_number(NVL(bd.int184,0)) "
strSql = strSql & "                 WHEN 185 THEN to_number(NVL(bd.int185,0)) "
strSql = strSql & "                 WHEN 186 THEN to_number(NVL(bd.int186,0)) "
strSql = strSql & "                 WHEN 187 THEN to_number(NVL(bd.int187,0)) "
strSql = strSql & "                 WHEN 188 THEN to_number(NVL(bd.int188,0)) "
strSql = strSql & "                 WHEN 189 THEN to_number(NVL(bd.int189,0)) "
strSql = strSql & "                 WHEN 190 THEN to_number(NVL(bd.int190,0)) "
strSql = strSql & "                 WHEN 191 THEN to_number(NVL(bd.int191,0)) "
strSql = strSql & "                 WHEN 192 THEN to_number(NVL(bd.int192,0)) "
strSql = strSql & "                 WHEN 193 THEN to_number(NVL(bd.int193,0)) "
strSql = strSql & "                 WHEN 194 THEN to_number(NVL(bd.int194,0)) "
strSql = strSql & "                 WHEN 195 THEN to_number(NVL(bd.int195,0)) "
strSql = strSql & "                 WHEN 196 THEN to_number(NVL(bd.int196,0)) "
strSql = strSql & "                 WHEN 197 THEN to_number(NVL(bd.int197,0)) "
strSql = strSql & "                 WHEN 198 THEN to_number(NVL(bd.int198,0)) "
strSql = strSql & "                 WHEN 199 THEN to_number(NVL(bd.int199,0)) "
strSql = strSql & "                 WHEN 200 THEN to_number(NVL(bd.int200,0)) "
strSql = strSql & "                 WHEN 201 THEN to_number(NVL(bd.int201,0)) "
strSql = strSql & "                 WHEN 202 THEN to_number(NVL(bd.int202,0)) "
strSql = strSql & "                 WHEN 203 THEN to_number(NVL(bd.int203,0)) "
strSql = strSql & "                 WHEN 204 THEN to_number(NVL(bd.int204,0)) "
strSql = strSql & "                 WHEN 205 THEN to_number(NVL(bd.int205,0)) "
strSql = strSql & "                 WHEN 206 THEN to_number(NVL(bd.int206,0)) "
strSql = strSql & "                 WHEN 207 THEN to_number(NVL(bd.int207,0)) "
strSql = strSql & "                 WHEN 208 THEN to_number(NVL(bd.int208,0)) "
strSql = strSql & "                 WHEN 209 THEN to_number(NVL(bd.int209,0)) "
strSql = strSql & "                 WHEN 210 THEN to_number(NVL(bd.int210,0)) "
strSql = strSql & "                 WHEN 211 THEN to_number(NVL(bd.int211,0)) "
strSql = strSql & "                 WHEN 212 THEN to_number(NVL(bd.int212,0)) "
strSql = strSql & "                 WHEN 213 THEN to_number(NVL(bd.int213,0)) "
strSql = strSql & "                 WHEN 214 THEN to_number(NVL(bd.int214,0)) "
strSql = strSql & "                 WHEN 215 THEN to_number(NVL(bd.int215,0)) "
strSql = strSql & "                 WHEN 216 THEN to_number(NVL(bd.int216,0)) "
strSql = strSql & "                 WHEN 217 THEN to_number(NVL(bd.int217,0)) "
strSql = strSql & "                 WHEN 218 THEN to_number(NVL(bd.int218,0)) "
strSql = strSql & "                 WHEN 219 THEN to_number(NVL(bd.int219,0)) "
strSql = strSql & "                 WHEN 220 THEN to_number(NVL(bd.int220,0)) "
strSql = strSql & "                 WHEN 221 THEN to_number(NVL(bd.int221,0)) "
strSql = strSql & "                 WHEN 222 THEN to_number(NVL(bd.int222,0)) "
strSql = strSql & "                 WHEN 223 THEN to_number(NVL(bd.int223,0)) "
strSql = strSql & "                 WHEN 224 THEN to_number(NVL(bd.int224,0)) "
strSql = strSql & "                 WHEN 225 THEN to_number(NVL(bd.int225,0)) "
strSql = strSql & "                 WHEN 226 THEN to_number(NVL(bd.int226,0)) "
strSql = strSql & "                 WHEN 227 THEN to_number(NVL(bd.int227,0)) "
strSql = strSql & "                 WHEN 228 THEN to_number(NVL(bd.int228,0)) "
strSql = strSql & "                 WHEN 229 THEN to_number(NVL(bd.int229,0)) "
strSql = strSql & "                 WHEN 230 THEN to_number(NVL(bd.int230,0)) "
strSql = strSql & "                 WHEN 231 THEN to_number(NVL(bd.int231,0)) "
strSql = strSql & "                 WHEN 232 THEN to_number(NVL(bd.int232,0)) "
strSql = strSql & "                 WHEN 233 THEN to_number(NVL(bd.int233,0)) "
strSql = strSql & "                 WHEN 234 THEN to_number(NVL(bd.int234,0)) "
strSql = strSql & "                 WHEN 235 THEN to_number(NVL(bd.int235,0)) "
strSql = strSql & "                 WHEN 236 THEN to_number(NVL(bd.int236,0)) "
strSql = strSql & "                 WHEN 237 THEN to_number(NVL(bd.int237,0)) "
strSql = strSql & "                 WHEN 238 THEN to_number(NVL(bd.int238,0)) "
strSql = strSql & "                 WHEN 239 THEN to_number(NVL(bd.int239,0)) "
strSql = strSql & "                 WHEN 240 THEN to_number(NVL(bd.int240,0)) "
strSql = strSql & "                 WHEN 241 THEN to_number(NVL(bd.int241,0)) "
strSql = strSql & "                 WHEN 242 THEN to_number(NVL(bd.int242,0)) "
strSql = strSql & "                 WHEN 243 THEN to_number(NVL(bd.int243,0)) "
strSql = strSql & "                 WHEN 244 THEN to_number(NVL(bd.int244,0)) "
strSql = strSql & "                 WHEN 245 THEN to_number(NVL(bd.int245,0)) "
strSql = strSql & "                 WHEN 246 THEN to_number(NVL(bd.int246,0)) "
strSql = strSql & "                 WHEN 247 THEN to_number(NVL(bd.int247,0)) "
strSql = strSql & "                 WHEN 248 THEN to_number(NVL(bd.int248,0)) "
strSql = strSql & "                 WHEN 249 THEN to_number(NVL(bd.int249,0)) "
strSql = strSql & "                 WHEN 250 THEN to_number(NVL(bd.int250,0)) "
strSql = strSql & "                 WHEN 251 THEN to_number(NVL(bd.int251,0)) "
strSql = strSql & "                 WHEN 252 THEN to_number(NVL(bd.int252,0)) "
strSql = strSql & "                 WHEN 253 THEN to_number(NVL(bd.int253,0)) "
strSql = strSql & "                 WHEN 254 THEN to_number(NVL(bd.int254,0)) "
strSql = strSql & "                 WHEN 255 THEN to_number(NVL(bd.int255,0)) "
strSql = strSql & "                 WHEN 256 THEN to_number(NVL(bd.int256,0)) "
strSql = strSql & "                 WHEN 257 THEN to_number(NVL(bd.int257,0)) "
strSql = strSql & "                 WHEN 258 THEN to_number(NVL(bd.int258,0)) "
strSql = strSql & "                 WHEN 259 THEN to_number(NVL(bd.int259,0)) "
strSql = strSql & "                 WHEN 260 THEN to_number(NVL(bd.int260,0)) "
strSql = strSql & "                 WHEN 261 THEN to_number(NVL(bd.int261,0)) "
strSql = strSql & "                 WHEN 262 THEN to_number(NVL(bd.int262,0)) "
strSql = strSql & "                 WHEN 263 THEN to_number(NVL(bd.int263,0)) "
strSql = strSql & "                 WHEN 264 THEN to_number(NVL(bd.int264,0)) "
strSql = strSql & "                 WHEN 265 THEN to_number(NVL(bd.int265,0)) "
strSql = strSql & "                 WHEN 266 THEN to_number(NVL(bd.int266,0)) "
strSql = strSql & "                 WHEN 267 THEN to_number(NVL(bd.int267,0)) "
strSql = strSql & "                 WHEN 268 THEN to_number(NVL(bd.int268,0)) "
strSql = strSql & "                 WHEN 269 THEN to_number(NVL(bd.int269,0)) "
strSql = strSql & "                 WHEN 270 THEN to_number(NVL(bd.int270,0)) "
strSql = strSql & "                 WHEN 271 THEN to_number(NVL(bd.int271,0)) "
strSql = strSql & "                 WHEN 272 THEN to_number(NVL(bd.int272,0)) "
strSql = strSql & "                 WHEN 273 THEN to_number(NVL(bd.int273,0)) "
strSql = strSql & "                 WHEN 274 THEN to_number(NVL(bd.int274,0)) "
strSql = strSql & "                 WHEN 275 THEN to_number(NVL(bd.int275,0)) "
strSql = strSql & "                 WHEN 276 THEN to_number(NVL(bd.int276,0)) "
strSql = strSql & "                 WHEN 277 THEN to_number(NVL(bd.int277,0)) "
strSql = strSql & "                 WHEN 278 THEN to_number(NVL(bd.int278,0)) "
strSql = strSql & "                 WHEN 279 THEN to_number(NVL(bd.int279,0)) "
strSql = strSql & "                 WHEN 280 THEN to_number(NVL(bd.int280,0)) "
strSql = strSql & "                 WHEN 281 THEN to_number(NVL(bd.int281,0)) "
strSql = strSql & "                 WHEN 282 THEN to_number(NVL(bd.int282,0)) "
strSql = strSql & "                 WHEN 283 THEN to_number(NVL(bd.int283,0)) "
strSql = strSql & "                 WHEN 284 THEN to_number(NVL(bd.int284,0)) "
strSql = strSql & "                 WHEN 285 THEN to_number(NVL(bd.int285,0)) "
strSql = strSql & "                 WHEN 286 THEN to_number(NVL(bd.int286,0)) "
strSql = strSql & "                 WHEN 287 THEN to_number(NVL(bd.int287,0)) "
strSql = strSql & "                 WHEN 288 THEN to_number(NVL(bd.int288,0)) "
strSql = strSql & "                 WHEN 289 THEN to_number(NVL(bd.int289,0)) "
strSql = strSql & "                 WHEN 290 THEN to_number(NVL(bd.int290,0)) "
strSql = strSql & "                 WHEN 291 THEN to_number(NVL(bd.int291,0)) "
strSql = strSql & "                 WHEN 292 THEN to_number(NVL(bd.int292,0)) "
strSql = strSql & "                 WHEN 293 THEN to_number(NVL(bd.int293,0)) "
strSql = strSql & "                 WHEN 294 THEN to_number(NVL(bd.int294,0)) "
strSql = strSql & "                 WHEN 295 THEN to_number(NVL(bd.int295,0)) "
strSql = strSql & "                 WHEN 296 THEN to_number(NVL(bd.int296,0)) "
strSql = strSql & "                 WHEN 297 THEN to_number(NVL(bd.int297,0)) "
strSql = strSql & "                 WHEN 298 THEN to_number(NVL(bd.int298,0)) "
strSql = strSql & "                 WHEN 299 THEN to_number(NVL(bd.int299,0)) "
strSql = strSql & "                 WHEN 300 THEN to_number(NVL(bd.int300,0)) "
strSql = strSql & "             ELSE 0 END AS VALUE "
strSql = strSql & "             FROM billdeterminant bd "
strSql = strSql & "             JOIN messageheader mh ON mh.messageheaderid = bd.messageheaderid  "
strSql = strSql & "             JOIN hyp_time_intervals ti ON ti.total_intervals = 300 "
strSql = strSql & "             WHERE name IN ('BA_5M_RSRC_TOT_SPIN_DA_RT_AWARD@QUANTITY', 'BA_5M_RSRC_TOT_NSPN_DA_RT_AWARD@QUANTITY', "
strSql = strSql & "                             'BA_5M_RSRC_NOPAY_SPIN_STLMT@AMOUNT', 'BA_5M_RSRC_NOPAY_NSPN_STLMT@AMOUNT', "
strSql = strSql & "                             'BA_5M_RSRC_NO_PAY_SPIN_AWARD@QUANTITY', 'BA_5M_RSRC_NO_PAY_NSPN_AWARD@QUANTITY', "
strSql = strSql & "                             'BA_5M_RSRC_AS_TEST_RESC_SPIN@QUANTITY', 'BA_5M_RSRC_AS_TEST_RESC_NSPN@QUANTITY',  "
strSql = strSql & "                             'BA_5M_RSRC_DECLINED_SPIN_CAP@QUANTITY', 'BA_5M_RSRC_DECLINED_NSPN_CAP@QUANTITY',  "
strSql = strSql & "                             'BA_5M_RSRC_UNAVAIL_SPIN_CAP@QUANTITY', 'BA_5M_RSRC_UNAVAIL_NSPN_CAP@QUANTITY',  "
strSql = strSql & "                             'BA_5M_RSRC_UNDELV_SPIN_CAP@QUANTITY', 'BA_5M_RSRC_UNDELV_NSPN_CAP@QUANTITY',  "
strSql = strSql & "                             'BA_5M_RSRC_UNDISP_SPIN_CAP@QUANTITY', 'BA_5M_RSRC_UNDISP_NSPN_CAP@QUANTITY',  "
strSql = strSql & "                             'BA_5M_RSRC_UNSYNCHRONIZED_SPIN_RSRV_BILL@QUANTITY', 'BA_5M_RSRC_UNSYNCHRONIZED_NSPN_RSRV_BILL@QUANTITY',  "
strSql = strSql & "                             'BA_5M_RSRC_CONSTRAINT_DQ_NO_PAY_NSPN@QUANTITY','BA_5M_RSRC_AGC@FLAG','BA_5M_RSRC_NOPAY_REGUP@AMOUNT', "
strSql = strSql & "                             'BA_5M_RSRC_NOPAY_REGDOWN_STLMT@AMOUNT', 'BA_5M_RSRC_NOPAY_REGUP_BID@QUANTITY', 'BA_5M_RSRC_NOPAY_REGDOWN_BID@QUANTITY') "
strSql = strSql & "                 AND mh.messageheaderid in  "
strSql = strSql & "                 ( "
strSql = strSql & "                 select MESSAGEHEADERID from date_details "
strSql = strSql & "                 )                    "
strSql = strSql & "             UNION ALL "
strSql = strSql & "             SELECT bd.trade_date "
strSql = strSql & "             , bd.attributevalue2 "
strSql = strSql & "             , mh.run_group_name "
strSql = strSql & "             , ti.hour "
strSql = strSql & "             , ti.interval "
strSql = strSql & "             , bd.name "
strSql = strSql & "             , CASE ti.interval  "
strSql = strSql & "                 WHEN 1 THEN to_number(NVL(bd.int001,0)) "
strSql = strSql & "                 WHEN 2 THEN to_number(NVL(bd.int001,0)) "
strSql = strSql & "                 WHEN 3 THEN to_number(NVL(bd.int001,0)) "
strSql = strSql & "                 WHEN 4 THEN to_number(NVL(bd.int002,0)) "
strSql = strSql & "                 WHEN 5 THEN to_number(NVL(bd.int002,0)) "
strSql = strSql & "                 WHEN 6 THEN to_number(NVL(bd.int002,0)) "
strSql = strSql & "                 WHEN 7 THEN to_number(NVL(bd.int003,0)) "
strSql = strSql & "                 WHEN 8 THEN to_number(NVL(bd.int003,0)) "
strSql = strSql & "                 WHEN 9 THEN to_number(NVL(bd.int003,0)) "
strSql = strSql & "                 WHEN 10 THEN to_number(NVL(bd.int004,0)) "
strSql = strSql & "                 WHEN 11 THEN to_number(NVL(bd.int004,0)) "
strSql = strSql & "                 WHEN 12 THEN to_number(NVL(bd.int004,0)) "
strSql = strSql & "                 WHEN 13 THEN to_number(NVL(bd.int005,0)) "
strSql = strSql & "                 WHEN 14 THEN to_number(NVL(bd.int005,0)) "
strSql = strSql & "                 WHEN 15 THEN to_number(NVL(bd.int005,0)) "
strSql = strSql & "                 WHEN 16 THEN to_number(NVL(bd.int006,0)) "
strSql = strSql & "                 WHEN 17 THEN to_number(NVL(bd.int006,0)) "
strSql = strSql & "                 WHEN 18 THEN to_number(NVL(bd.int006,0)) "
strSql = strSql & "                 WHEN 19 THEN to_number(NVL(bd.int007,0)) "
strSql = strSql & "                 WHEN 20 THEN to_number(NVL(bd.int007,0)) "
strSql = strSql & "                 WHEN 21 THEN to_number(NVL(bd.int007,0)) "
strSql = strSql & "                 WHEN 22 THEN to_number(NVL(bd.int008,0)) "
strSql = strSql & "                 WHEN 23 THEN to_number(NVL(bd.int008,0)) "
strSql = strSql & "                 WHEN 24 THEN to_number(NVL(bd.int008,0)) "
strSql = strSql & "                 WHEN 25 THEN to_number(NVL(bd.int009,0)) "
strSql = strSql & "                 WHEN 26 THEN to_number(NVL(bd.int009,0)) "
strSql = strSql & "                 WHEN 27 THEN to_number(NVL(bd.int009,0)) "
strSql = strSql & "                 WHEN 28 THEN to_number(NVL(bd.int010,0)) "
strSql = strSql & "                 WHEN 29 THEN to_number(NVL(bd.int010,0)) "
strSql = strSql & "                 WHEN 30 THEN to_number(NVL(bd.int010,0)) "
strSql = strSql & "                 WHEN 31 THEN to_number(NVL(bd.int011,0)) "
strSql = strSql & "                 WHEN 32 THEN to_number(NVL(bd.int011,0)) "
strSql = strSql & "                 WHEN 33 THEN to_number(NVL(bd.int011,0)) "
strSql = strSql & "                 WHEN 34 THEN to_number(NVL(bd.int012,0)) "
strSql = strSql & "                 WHEN 35 THEN to_number(NVL(bd.int012,0)) "
strSql = strSql & "                 WHEN 36 THEN to_number(NVL(bd.int012,0)) "
strSql = strSql & "                 WHEN 37 THEN to_number(NVL(bd.int013,0)) "
strSql = strSql & "                 WHEN 38 THEN to_number(NVL(bd.int013,0)) "
strSql = strSql & "                 WHEN 39 THEN to_number(NVL(bd.int013,0)) "
strSql = strSql & "                 WHEN 40 THEN to_number(NVL(bd.int014,0)) "
strSql = strSql & "                 WHEN 41 THEN to_number(NVL(bd.int014,0)) "
strSql = strSql & "                 WHEN 42 THEN to_number(NVL(bd.int014,0)) "
strSql = strSql & "                 WHEN 43 THEN to_number(NVL(bd.int015,0)) "
strSql = strSql & "                 WHEN 44 THEN to_number(NVL(bd.int015,0)) "
strSql = strSql & "                 WHEN 45 THEN to_number(NVL(bd.int015,0)) "
strSql = strSql & "                 WHEN 46 THEN to_number(NVL(bd.int016,0)) "
strSql = strSql & "                 WHEN 47 THEN to_number(NVL(bd.int016,0)) "
strSql = strSql & "                 WHEN 48 THEN to_number(NVL(bd.int016,0)) "
strSql = strSql & "                 WHEN 49 THEN to_number(NVL(bd.int017,0)) "
strSql = strSql & "                 WHEN 50 THEN to_number(NVL(bd.int017,0)) "
strSql = strSql & "                 WHEN 51 THEN to_number(NVL(bd.int017,0)) "
strSql = strSql & "                 WHEN 52 THEN to_number(NVL(bd.int018,0)) "
strSql = strSql & "                 WHEN 53 THEN to_number(NVL(bd.int018,0)) "
strSql = strSql & "                 WHEN 54 THEN to_number(NVL(bd.int018,0)) "
strSql = strSql & "                 WHEN 55 THEN to_number(NVL(bd.int019,0)) "
strSql = strSql & "                 WHEN 56 THEN to_number(NVL(bd.int019,0)) "
strSql = strSql & "                 WHEN 57 THEN to_number(NVL(bd.int019,0)) "
strSql = strSql & "                 WHEN 58 THEN to_number(NVL(bd.int020,0)) "
strSql = strSql & "                 WHEN 59 THEN to_number(NVL(bd.int020,0)) "
strSql = strSql & "                 WHEN 60 THEN to_number(NVL(bd.int020,0)) "
strSql = strSql & "                 WHEN 61 THEN to_number(NVL(bd.int021,0)) "
strSql = strSql & "                 WHEN 62 THEN to_number(NVL(bd.int021,0)) "
strSql = strSql & "                 WHEN 63 THEN to_number(NVL(bd.int021,0)) "
strSql = strSql & "                 WHEN 64 THEN to_number(NVL(bd.int022,0)) "
strSql = strSql & "                 WHEN 65 THEN to_number(NVL(bd.int022,0)) "
strSql = strSql & "                 WHEN 66 THEN to_number(NVL(bd.int022,0)) "
strSql = strSql & "                 WHEN 67 THEN to_number(NVL(bd.int023,0)) "
strSql = strSql & "                 WHEN 68 THEN to_number(NVL(bd.int023,0)) "
strSql = strSql & "                 WHEN 69 THEN to_number(NVL(bd.int023,0)) "
strSql = strSql & "                 WHEN 70 THEN to_number(NVL(bd.int024,0)) "
strSql = strSql & "                 WHEN 71 THEN to_number(NVL(bd.int024,0)) "
strSql = strSql & "                 WHEN 72 THEN to_number(NVL(bd.int024,0)) "
strSql = strSql & "                 WHEN 73 THEN to_number(NVL(bd.int025,0)) "
strSql = strSql & "                 WHEN 74 THEN to_number(NVL(bd.int025,0)) "
strSql = strSql & "                 WHEN 75 THEN to_number(NVL(bd.int025,0)) "
strSql = strSql & "                 WHEN 76 THEN to_number(NVL(bd.int026,0)) "
strSql = strSql & "                 WHEN 77 THEN to_number(NVL(bd.int026,0)) "
strSql = strSql & "                 WHEN 78 THEN to_number(NVL(bd.int026,0)) "
strSql = strSql & "                 WHEN 79 THEN to_number(NVL(bd.int027,0)) "
strSql = strSql & "                 WHEN 80 THEN to_number(NVL(bd.int027,0)) "
strSql = strSql & "                 WHEN 81 THEN to_number(NVL(bd.int027,0)) "
strSql = strSql & "                 WHEN 82 THEN to_number(NVL(bd.int028,0)) "
strSql = strSql & "                 WHEN 83 THEN to_number(NVL(bd.int028,0)) "
strSql = strSql & "                 WHEN 84 THEN to_number(NVL(bd.int028,0)) "
strSql = strSql & "                 WHEN 85 THEN to_number(NVL(bd.int029,0)) "
strSql = strSql & "                 WHEN 86 THEN to_number(NVL(bd.int029,0)) "
strSql = strSql & "                 WHEN 87 THEN to_number(NVL(bd.int029,0)) "
strSql = strSql & "                 WHEN 88 THEN to_number(NVL(bd.int030,0)) "
strSql = strSql & "                 WHEN 89 THEN to_number(NVL(bd.int030,0)) "
strSql = strSql & "                 WHEN 90 THEN to_number(NVL(bd.int030,0)) "
strSql = strSql & "                 WHEN 91 THEN to_number(NVL(bd.int031,0)) "
strSql = strSql & "                 WHEN 92 THEN to_number(NVL(bd.int031,0)) "
strSql = strSql & "                 WHEN 93 THEN to_number(NVL(bd.int031,0)) "
strSql = strSql & "                 WHEN 94 THEN to_number(NVL(bd.int032,0)) "
strSql = strSql & "                 WHEN 95 THEN to_number(NVL(bd.int032,0)) "
strSql = strSql & "                 WHEN 96 THEN to_number(NVL(bd.int032,0)) "
strSql = strSql & "                 WHEN 97 THEN to_number(NVL(bd.int033,0)) "
strSql = strSql & "                 WHEN 98 THEN to_number(NVL(bd.int033,0)) "
strSql = strSql & "                 WHEN 99 THEN to_number(NVL(bd.int033,0)) "
strSql = strSql & "                 WHEN 100 THEN to_number(NVL(bd.int034,0)) "
strSql = strSql & "                 WHEN 101 THEN to_number(NVL(bd.int034,0)) "
strSql = strSql & "                 WHEN 102 THEN to_number(NVL(bd.int034,0)) "
strSql = strSql & "                 WHEN 103 THEN to_number(NVL(bd.int035,0)) "
strSql = strSql & "                 WHEN 104 THEN to_number(NVL(bd.int035,0)) "
strSql = strSql & "                 WHEN 105 THEN to_number(NVL(bd.int035,0)) "
strSql = strSql & "                 WHEN 106 THEN to_number(NVL(bd.int036,0)) "
strSql = strSql & "                 WHEN 107 THEN to_number(NVL(bd.int036,0)) "
strSql = strSql & "                 WHEN 108 THEN to_number(NVL(bd.int036,0)) "
strSql = strSql & "                 WHEN 109 THEN to_number(NVL(bd.int037,0)) "
strSql = strSql & "                 WHEN 110 THEN to_number(NVL(bd.int037,0)) "
strSql = strSql & "                 WHEN 111 THEN to_number(NVL(bd.int037,0)) "
strSql = strSql & "                 WHEN 112 THEN to_number(NVL(bd.int038,0)) "
strSql = strSql & "                 WHEN 113 THEN to_number(NVL(bd.int038,0)) "
strSql = strSql & "                 WHEN 114 THEN to_number(NVL(bd.int038,0)) "
strSql = strSql & "                 WHEN 115 THEN to_number(NVL(bd.int039,0)) "
strSql = strSql & "                 WHEN 116 THEN to_number(NVL(bd.int039,0)) "
strSql = strSql & "                 WHEN 117 THEN to_number(NVL(bd.int039,0)) "
strSql = strSql & "                 WHEN 118 THEN to_number(NVL(bd.int040,0)) "
strSql = strSql & "                 WHEN 119 THEN to_number(NVL(bd.int040,0)) "
strSql = strSql & "                 WHEN 120 THEN to_number(NVL(bd.int040,0)) "
strSql = strSql & "                 WHEN 121 THEN to_number(NVL(bd.int041,0)) "
strSql = strSql & "                 WHEN 122 THEN to_number(NVL(bd.int041,0)) "
strSql = strSql & "                 WHEN 123 THEN to_number(NVL(bd.int041,0)) "
strSql = strSql & "                 WHEN 124 THEN to_number(NVL(bd.int042,0)) "
strSql = strSql & "                 WHEN 125 THEN to_number(NVL(bd.int042,0)) "
strSql = strSql & "                 WHEN 126 THEN to_number(NVL(bd.int042,0)) "
strSql = strSql & "                 WHEN 127 THEN to_number(NVL(bd.int043,0)) "
strSql = strSql & "                 WHEN 128 THEN to_number(NVL(bd.int043,0)) "
strSql = strSql & "                 WHEN 129 THEN to_number(NVL(bd.int043,0)) "
strSql = strSql & "                 WHEN 130 THEN to_number(NVL(bd.int044,0)) "
strSql = strSql & "                 WHEN 131 THEN to_number(NVL(bd.int044,0)) "
strSql = strSql & "                 WHEN 132 THEN to_number(NVL(bd.int044,0)) "
strSql = strSql & "                 WHEN 133 THEN to_number(NVL(bd.int045,0)) "
strSql = strSql & "                 WHEN 134 THEN to_number(NVL(bd.int045,0)) "
strSql = strSql & "                 WHEN 135 THEN to_number(NVL(bd.int045,0)) "
strSql = strSql & "                 WHEN 136 THEN to_number(NVL(bd.int046,0)) "
strSql = strSql & "                 WHEN 137 THEN to_number(NVL(bd.int046,0)) "
strSql = strSql & "                 WHEN 138 THEN to_number(NVL(bd.int046,0)) "
strSql = strSql & "                 WHEN 139 THEN to_number(NVL(bd.int047,0)) "
strSql = strSql & "                 WHEN 140 THEN to_number(NVL(bd.int047,0)) "
strSql = strSql & "                 WHEN 141 THEN to_number(NVL(bd.int047,0)) "
strSql = strSql & "                 WHEN 142 THEN to_number(NVL(bd.int048,0)) "
strSql = strSql & "                 WHEN 143 THEN to_number(NVL(bd.int048,0)) "
strSql = strSql & "                 WHEN 144 THEN to_number(NVL(bd.int048,0)) "
strSql = strSql & "                 WHEN 145 THEN to_number(NVL(bd.int049,0)) "
strSql = strSql & "                 WHEN 146 THEN to_number(NVL(bd.int049,0)) "
strSql = strSql & "                 WHEN 147 THEN to_number(NVL(bd.int049,0)) "
strSql = strSql & "                 WHEN 148 THEN to_number(NVL(bd.int050,0)) "
strSql = strSql & "                 WHEN 149 THEN to_number(NVL(bd.int050,0)) "
strSql = strSql & "                 WHEN 150 THEN to_number(NVL(bd.int050,0)) "
strSql = strSql & "                 WHEN 151 THEN to_number(NVL(bd.int051,0)) "
strSql = strSql & "                 WHEN 152 THEN to_number(NVL(bd.int051,0)) "
strSql = strSql & "                 WHEN 153 THEN to_number(NVL(bd.int051,0)) "
strSql = strSql & "                 WHEN 154 THEN to_number(NVL(bd.int052,0)) "
strSql = strSql & "                 WHEN 155 THEN to_number(NVL(bd.int052,0)) "
strSql = strSql & "                 WHEN 156 THEN to_number(NVL(bd.int052,0)) "
strSql = strSql & "                 WHEN 157 THEN to_number(NVL(bd.int053,0)) "
strSql = strSql & "                 WHEN 158 THEN to_number(NVL(bd.int053,0)) "
strSql = strSql & "                 WHEN 159 THEN to_number(NVL(bd.int053,0)) "
strSql = strSql & "                 WHEN 160 THEN to_number(NVL(bd.int054,0)) "
strSql = strSql & "                 WHEN 161 THEN to_number(NVL(bd.int054,0)) "
strSql = strSql & "                 WHEN 162 THEN to_number(NVL(bd.int054,0)) "
strSql = strSql & "                 WHEN 163 THEN to_number(NVL(bd.int055,0)) "
strSql = strSql & "                 WHEN 164 THEN to_number(NVL(bd.int055,0)) "
strSql = strSql & "                 WHEN 165 THEN to_number(NVL(bd.int055,0)) "
strSql = strSql & "                 WHEN 166 THEN to_number(NVL(bd.int056,0)) "
strSql = strSql & "                 WHEN 167 THEN to_number(NVL(bd.int056,0)) "
strSql = strSql & "                 WHEN 168 THEN to_number(NVL(bd.int056,0)) "
strSql = strSql & "                 WHEN 169 THEN to_number(NVL(bd.int057,0)) "
strSql = strSql & "                 WHEN 170 THEN to_number(NVL(bd.int057,0)) "
strSql = strSql & "                 WHEN 171 THEN to_number(NVL(bd.int057,0)) "
strSql = strSql & "                 WHEN 172 THEN to_number(NVL(bd.int058,0)) "
strSql = strSql & "                 WHEN 173 THEN to_number(NVL(bd.int058,0)) "
strSql = strSql & "                 WHEN 174 THEN to_number(NVL(bd.int058,0)) "
strSql = strSql & "                 WHEN 175 THEN to_number(NVL(bd.int059,0)) "
strSql = strSql & "                 WHEN 176 THEN to_number(NVL(bd.int059,0)) "
strSql = strSql & "                 WHEN 177 THEN to_number(NVL(bd.int059,0)) "
strSql = strSql & "                 WHEN 178 THEN to_number(NVL(bd.int060,0)) "
strSql = strSql & "                 WHEN 179 THEN to_number(NVL(bd.int060,0)) "
strSql = strSql & "                 WHEN 180 THEN to_number(NVL(bd.int060,0)) "
strSql = strSql & "                 WHEN 181 THEN to_number(NVL(bd.int061,0)) "
strSql = strSql & "                 WHEN 182 THEN to_number(NVL(bd.int061,0)) "
strSql = strSql & "                 WHEN 183 THEN to_number(NVL(bd.int061,0)) "
strSql = strSql & "                 WHEN 184 THEN to_number(NVL(bd.int062,0)) "
strSql = strSql & "                 WHEN 185 THEN to_number(NVL(bd.int062,0)) "
strSql = strSql & "                 WHEN 186 THEN to_number(NVL(bd.int062,0)) "
strSql = strSql & "                 WHEN 187 THEN to_number(NVL(bd.int063,0)) "
strSql = strSql & "                 WHEN 188 THEN to_number(NVL(bd.int063,0)) "
strSql = strSql & "                 WHEN 189 THEN to_number(NVL(bd.int063,0)) "
strSql = strSql & "                 WHEN 190 THEN to_number(NVL(bd.int064,0)) "
strSql = strSql & "                 WHEN 191 THEN to_number(NVL(bd.int064,0)) "
strSql = strSql & "                 WHEN 192 THEN to_number(NVL(bd.int064,0)) "
strSql = strSql & "                 WHEN 193 THEN to_number(NVL(bd.int065,0)) "
strSql = strSql & "                 WHEN 194 THEN to_number(NVL(bd.int065,0)) "
strSql = strSql & "                 WHEN 195 THEN to_number(NVL(bd.int065,0)) "
strSql = strSql & "                 WHEN 196 THEN to_number(NVL(bd.int066,0)) "
strSql = strSql & "                 WHEN 197 THEN to_number(NVL(bd.int066,0)) "
strSql = strSql & "                 WHEN 198 THEN to_number(NVL(bd.int066,0)) "
strSql = strSql & "                 WHEN 199 THEN to_number(NVL(bd.int067,0)) "
strSql = strSql & "                 WHEN 200 THEN to_number(NVL(bd.int067,0)) "
strSql = strSql & "                 WHEN 201 THEN to_number(NVL(bd.int067,0)) "
strSql = strSql & "                 WHEN 202 THEN to_number(NVL(bd.int068,0)) "
strSql = strSql & "                 WHEN 203 THEN to_number(NVL(bd.int068,0)) "
strSql = strSql & "                 WHEN 204 THEN to_number(NVL(bd.int068,0)) "
strSql = strSql & "                 WHEN 205 THEN to_number(NVL(bd.int069,0)) "
strSql = strSql & "                 WHEN 206 THEN to_number(NVL(bd.int069,0)) "
strSql = strSql & "                 WHEN 207 THEN to_number(NVL(bd.int069,0)) "
strSql = strSql & "                 WHEN 208 THEN to_number(NVL(bd.int070,0)) "
strSql = strSql & "                 WHEN 209 THEN to_number(NVL(bd.int070,0)) "
strSql = strSql & "                 WHEN 210 THEN to_number(NVL(bd.int070,0)) "
strSql = strSql & "                 WHEN 211 THEN to_number(NVL(bd.int071,0)) "
strSql = strSql & "                 WHEN 212 THEN to_number(NVL(bd.int071,0)) "
strSql = strSql & "                 WHEN 213 THEN to_number(NVL(bd.int071,0)) "
strSql = strSql & "                 WHEN 214 THEN to_number(NVL(bd.int072,0)) "
strSql = strSql & "                 WHEN 215 THEN to_number(NVL(bd.int072,0)) "
strSql = strSql & "                 WHEN 216 THEN to_number(NVL(bd.int072,0)) "
strSql = strSql & "                 WHEN 217 THEN to_number(NVL(bd.int073,0)) "
strSql = strSql & "                 WHEN 218 THEN to_number(NVL(bd.int073,0)) "
strSql = strSql & "                 WHEN 219 THEN to_number(NVL(bd.int073,0)) "
strSql = strSql & "                 WHEN 220 THEN to_number(NVL(bd.int074,0)) "
strSql = strSql & "                 WHEN 221 THEN to_number(NVL(bd.int074,0)) "
strSql = strSql & "                 WHEN 222 THEN to_number(NVL(bd.int074,0)) "
strSql = strSql & "                 WHEN 223 THEN to_number(NVL(bd.int075,0)) "
strSql = strSql & "                 WHEN 224 THEN to_number(NVL(bd.int075,0)) "
strSql = strSql & "                 WHEN 225 THEN to_number(NVL(bd.int075,0)) "
strSql = strSql & "                 WHEN 226 THEN to_number(NVL(bd.int076,0)) "
strSql = strSql & "                 WHEN 227 THEN to_number(NVL(bd.int076,0)) "
strSql = strSql & "                 WHEN 228 THEN to_number(NVL(bd.int076,0)) "
strSql = strSql & "                 WHEN 229 THEN to_number(NVL(bd.int077,0)) "
strSql = strSql & "                 WHEN 230 THEN to_number(NVL(bd.int077,0)) "
strSql = strSql & "                 WHEN 231 THEN to_number(NVL(bd.int077,0)) "
strSql = strSql & "                 WHEN 232 THEN to_number(NVL(bd.int078,0)) "
strSql = strSql & "                 WHEN 233 THEN to_number(NVL(bd.int078,0)) "
strSql = strSql & "                 WHEN 234 THEN to_number(NVL(bd.int078,0)) "
strSql = strSql & "                 WHEN 235 THEN to_number(NVL(bd.int079,0)) "
strSql = strSql & "                 WHEN 236 THEN to_number(NVL(bd.int079,0)) "
strSql = strSql & "                 WHEN 237 THEN to_number(NVL(bd.int079,0)) "
strSql = strSql & "                 WHEN 238 THEN to_number(NVL(bd.int080,0)) "
strSql = strSql & "                 WHEN 239 THEN to_number(NVL(bd.int080,0)) "
strSql = strSql & "                 WHEN 240 THEN to_number(NVL(bd.int080,0)) "
strSql = strSql & "                 WHEN 241 THEN to_number(NVL(bd.int081,0)) "
strSql = strSql & "                 WHEN 242 THEN to_number(NVL(bd.int081,0)) "
strSql = strSql & "                 WHEN 243 THEN to_number(NVL(bd.int081,0)) "
strSql = strSql & "                 WHEN 244 THEN to_number(NVL(bd.int082,0)) "
strSql = strSql & "                 WHEN 245 THEN to_number(NVL(bd.int082,0)) "
strSql = strSql & "                 WHEN 246 THEN to_number(NVL(bd.int082,0)) "
strSql = strSql & "                 WHEN 247 THEN to_number(NVL(bd.int083,0)) "
strSql = strSql & "                 WHEN 248 THEN to_number(NVL(bd.int083,0)) "
strSql = strSql & "                 WHEN 249 THEN to_number(NVL(bd.int083,0)) "
strSql = strSql & "                 WHEN 250 THEN to_number(NVL(bd.int084,0)) "
strSql = strSql & "                 WHEN 251 THEN to_number(NVL(bd.int084,0)) "
strSql = strSql & "                 WHEN 252 THEN to_number(NVL(bd.int084,0)) "
strSql = strSql & "                 WHEN 253 THEN to_number(NVL(bd.int085,0)) "
strSql = strSql & "                 WHEN 254 THEN to_number(NVL(bd.int085,0)) "
strSql = strSql & "                 WHEN 255 THEN to_number(NVL(bd.int085,0)) "
strSql = strSql & "                 WHEN 256 THEN to_number(NVL(bd.int086,0)) "
strSql = strSql & "                 WHEN 257 THEN to_number(NVL(bd.int086,0)) "
strSql = strSql & "                 WHEN 258 THEN to_number(NVL(bd.int086,0)) "
strSql = strSql & "                 WHEN 259 THEN to_number(NVL(bd.int087,0)) "
strSql = strSql & "                 WHEN 260 THEN to_number(NVL(bd.int087,0)) "
strSql = strSql & "                 WHEN 261 THEN to_number(NVL(bd.int087,0)) "
strSql = strSql & "                 WHEN 262 THEN to_number(NVL(bd.int088,0)) "
strSql = strSql & "                 WHEN 263 THEN to_number(NVL(bd.int088,0)) "
strSql = strSql & "                 WHEN 264 THEN to_number(NVL(bd.int088,0)) "
strSql = strSql & "                 WHEN 265 THEN to_number(NVL(bd.int089,0)) "
strSql = strSql & "                 WHEN 266 THEN to_number(NVL(bd.int089,0)) "
strSql = strSql & "                 WHEN 267 THEN to_number(NVL(bd.int089,0)) "
strSql = strSql & "                 WHEN 268 THEN to_number(NVL(bd.int090,0)) "
strSql = strSql & "                 WHEN 269 THEN to_number(NVL(bd.int090,0)) "
strSql = strSql & "                 WHEN 270 THEN to_number(NVL(bd.int090,0)) "
strSql = strSql & "                 WHEN 271 THEN to_number(NVL(bd.int091,0)) "
strSql = strSql & "                 WHEN 272 THEN to_number(NVL(bd.int091,0)) "
strSql = strSql & "                 WHEN 273 THEN to_number(NVL(bd.int091,0)) "
strSql = strSql & "                 WHEN 274 THEN to_number(NVL(bd.int092,0)) "
strSql = strSql & "                 WHEN 275 THEN to_number(NVL(bd.int092,0)) "
strSql = strSql & "                 WHEN 276 THEN to_number(NVL(bd.int092,0)) "
strSql = strSql & "                 WHEN 277 THEN to_number(NVL(bd.int093,0)) "
strSql = strSql & "                 WHEN 278 THEN to_number(NVL(bd.int093,0)) "
strSql = strSql & "                 WHEN 279 THEN to_number(NVL(bd.int093,0)) "
strSql = strSql & "                 WHEN 280 THEN to_number(NVL(bd.int094,0)) "
strSql = strSql & "                 WHEN 281 THEN to_number(NVL(bd.int094,0)) "
strSql = strSql & "                 WHEN 282 THEN to_number(NVL(bd.int094,0)) "
strSql = strSql & "                 WHEN 283 THEN to_number(NVL(bd.int095,0)) "
strSql = strSql & "                 WHEN 284 THEN to_number(NVL(bd.int095,0)) "
strSql = strSql & "                 WHEN 285 THEN to_number(NVL(bd.int095,0)) "
strSql = strSql & "                 WHEN 286 THEN to_number(NVL(bd.int096,0)) "
strSql = strSql & "                 WHEN 287 THEN to_number(NVL(bd.int096,0)) "
strSql = strSql & "                 WHEN 288 THEN to_number(NVL(bd.int096,0)) "
strSql = strSql & "                 WHEN 289 THEN to_number(NVL(bd.int097,0)) "
strSql = strSql & "                 WHEN 290 THEN to_number(NVL(bd.int097,0)) "
strSql = strSql & "                 WHEN 291 THEN to_number(NVL(bd.int097,0)) "
strSql = strSql & "                 WHEN 292 THEN to_number(NVL(bd.int098,0)) "
strSql = strSql & "                 WHEN 293 THEN to_number(NVL(bd.int098,0)) "
strSql = strSql & "                 WHEN 294 THEN to_number(NVL(bd.int098,0)) "
strSql = strSql & "                 WHEN 295 THEN to_number(NVL(bd.int099,0)) "
strSql = strSql & "                 WHEN 296 THEN to_number(NVL(bd.int099,0)) "
strSql = strSql & "                 WHEN 297 THEN to_number(NVL(bd.int099,0)) "
strSql = strSql & "                 WHEN 298 THEN to_number(NVL(bd.int100,0)) "
strSql = strSql & "                 WHEN 299 THEN to_number(NVL(bd.int100,0)) "
strSql = strSql & "                 WHEN 300 THEN to_number(NVL(bd.int100,0)) "
strSql = strSql & "             ELSE 0 END AS VALUE "
strSql = strSql & "             FROM billdeterminant bd "
strSql = strSql & "             JOIN messageheader mh ON mh.messageheaderid = bd.messageheaderid  "
strSql = strSql & "             JOIN hyp_time_intervals ti ON ti.total_intervals = 300 "
strSql = strSql & "             WHERE name IN ('BA_15M_RSRC_RT_SPIN_CLEARED_QTY', 'BA_15M_RSRC_RT_NSPN_CLEARED_QTY', 'BA_15M_RSRC_NOPAY_SPIN_STLMT@PRICE' "
strSql = strSql & "                     , 'BA_15M_RSRC_NOPAY_NSPN_STLMT@PRICE', 'BA_15M_RSRC_RT_SPIN_CONSTRAINT_DQ@QUANTITY', 'BA_15M_RSRC_UNTAG_SPIN_CAP_HPD_TG@QUANTITY' "
strSql = strSql & "                     , 'BA_15M_RSRC_UNTAG_NSPN_CAP_HPD_TG@QUANTITY','BA_15M_RSRC_NOPAY_REGUP@PRICE', 'BA_15M_RSRC_NOPAY_REGDOWN_STLMT@PRICE', 'BA_15M_RSRC_REGUP_TOT_AWARD_CAP@QUANTITY' "
strSql = strSql & "                     , 'BA_15M_RSRC_REGDOWN_TOT_AWARD_CAP@QUANTITY', 'BA_15M_RSRC_RT_REGUP_CONSTRAINT_DQ@QUANTITY' "
strSql = strSql & "                     , 'BA_15M_RSRC_RT_REGDOWN_CONSTRAINT_DQ@QUANTITY', 'BA_15M_RSRC_REGUP_COMM_ERROR_MW@QUANTITY', 'BA_15M_RSRC_REGDOWN_COMM_ERROR_MW@QUANTITY' "
strSql = strSql & "                     , 'BA_15M_RSRC_REGUP_CONSTRAINED_MW@QUANTITY', 'BA_15M_RSRC_REGDOWN_CONSTRAINED_MW@QUANTITY', 'BA_15M_RSRC_REGUP_OFF_CTRL_MW@QUANTITY' "
strSql = strSql & "                     , 'BA_15M_RSRC_REGDOWN_OFF_CTRL_MW@QUANTITY', 'BA_15M_RSRC_REGUP_OUTAGE_MW@QUANTITY', 'BA_15M_RSRC_REGDOWN_OUTAGE_MW@QUANTITY' "
strSql = strSql & "                     , 'BA_15M_RSRC_REGUP_OUT_OF_RANGE_MW@QUANTITY', 'BA_15M_RSRC_REGDOWN_OUT_OF_RANGE_MW@QUANTITY')        "
strSql = strSql & "                 AND mh.messageheaderid in ( "
strSql = strSql & "                     select MESSAGEHEADERID from date_details "
strSql = strSql & "                     ) "
strSql = strSql & "                 ) "
strSql = strSql & "             )GROUP BY trade_date, attributevalue2, run_group_name, hour, interval  "
strSql = strSql & "         ) "
strSql = strSql & " WHERE ROUND(NVL(LEAST(SPIN_PRICE*LEAST(GREATEST((1-AGC_Flag)*LEAST(SPIN_RT_Cleared_Qty,SPIN_MAIN_CALC),SPIN_AS_Test),SPIN_Awarded_Qty),SPIN_No_Pay_AMT_Total),0) "
strSql = strSql & "         +NVL(LEAST(NSPN_PRICE*LEAST(GREATEST((1-AGC_Flag)*LEAST(NSPN_RT_Cleared_Qty,NSPN_MAIN_CALC),NSPN_AS_Test),NSPN_Awarded_Qty),NSPN_No_Pay_AMT_Total),0) "
strSql = strSql & "         +NVL(LEAST(LEAST(REGUP_Awarded_Qty,REGUP_MAIN_CALC_Qty)*REGUP_PRICE,REGUP_No_Pay_AMT_Total),0) "
strSql = strSql & "         +NVL(LEAST(LEAST(REGDW_Awarded_Qty,REGDW_MAIN_CALC_Qty)*REGDW_PRICE,REGDW_No_Pay_AMT_Total),0),2) <> 0 "
strSql = strSql & "       AND attributevalue2 IN (" & Resource & ") "
strSql = strSql & " ORDER BY attributevalue2, trade_date, interval "
 
Set OraDynaset = objdatabase.DBCreateDynaset(strSql, 0)
    
    If OraDynaset.RecordCount > 0 Then
        OraDynaset.MoveFirst
        For x = 0 To OraDynaset.Fields.Count - 1
            Cells(1, x + 1) = OraDynaset.Fields(x).Name
            Cells(1, x + 1).Font.Bold = True
        Next

        For y = 0 To OraDynaset.RecordCount - 1
            For x = 0 To OraDynaset.Fields.Count - 1
                Cells(y + (lastrow + 1), x + 1) = OraDynaset.Fields(x).Value
            Next
            OraDynaset.MoveNext
        Next
    End If

' Renames columns so that Endur can read
Range("A1") = "Trade Date"
Range("B1") = "Resource Name"
Range("C1") = "Statement"
Range("D1") = "Hour"
Range("E1") = "Interval"
Range("F1") = "Total No Pay Amount"
Range("G1") = "Spin CAISO Awarded Quantity"
Range("H1") = "Spin CAISO No Pay Quantity"
Range("I1") = "Spin CAISO No Pay Amount"
Range("J1") = "Spin CAISO Price"
Range("K1") = "Spin No Pay Quantity"
Range("L1") = "Spin No Pay Amount"
Range("M1") = "Non-Spin CAISO Awarded Quantity"
Range("N1") = "Non-Spin CAISO No Pay Quantity"
Range("O1") = "Non-Spin CAISO No Pay Amount"
Range("P1") = "Non-Spin CAISO Price"
Range("Q1") = "Non-Spin No Pay Quantity"
Range("R1") = "Non-Spin No Pay Amount"
Range("S1") = "RegUp CAISO Awarded Quantity"
Range("T1") = "RegUp CAISO No Pay Quantity"
Range("U1") = "RegUp CAISO No Pay Amount"
Range("V1") = "RegUp CAISO Price"
Range("W1") = "RegUp No Pay Quantity"
Range("X1") = "RegUp No Pay Amount"
Range("Y1") = "RegDown CAISO Awarded Quantity"
Range("Z1") = "RegDown CAISO No Pay Quantity"
Range("AA1") = "RegDown CAISO No Pay Amount"
Range("AB1") = "RegDown CAISO Price"
Range("AC1") = "RegDown No Pay Quantity"
Range("AD1") = "RegDown No Pay Amount"
Range("AE1") = "Spin AS Test P"
Range("AF1") = "Spin Unavailable P"
Range("AG1") = "Spin Undelivered P"
Range("AH1") = "Spin Unsynchronized P"
Range("AI1") = "Spin Constraint Disqualification NP"
Range("AJ1") = "Spin Undispatchable NP"
Range("AK1") = "Spin Declined NP"
Range("AL1") = "Spin Untagged NP"
Range("AM1") = "Non-Spin AS Test P"
Range("AN1") = "Non-Spin Unavailable P"
Range("AO1") = "Non-Spin Undelivered P"
Range("AP1") = "Non-Spin Unsynchronized P"
Range("AQ1") = "Non-Spin Constraint Disqualification NP"
Range("AR1") = "Non-Spin Undispatchable NP"
Range("AS1") = "Non-Spin Declined NP"
Range("AT1") = "Non-Spin Untagged NP"
Range("AU1") = "RegUp Communication Error P"
Range("AV1") = "RegUp Off Control AGC P"
Range("AW1") = "RegUp Outage P"
Range("AX1") = "RegUp Out of Range P"
Range("AY1") = "RegUp Constraint Disqualification NP"
Range("AZ1") = "RegUp Constrained_Lack of Range NP"
Range("BA1") = "RegDown Communication Error P"
Range("BB1") = "RegDown Off Control AGC P"
Range("BC1") = "RegDown Outage P"
Range("BD1") = "RegDown Out of Range P"
Range("BE1") = "RegDown Constraint Disqualification NP"
Range("BF1") = "RegDown Constrained_Lack of Range NP"

' Copy Data to new sheet
Dim lr As Long
Dim ws As Worksheet
Dim icol As Long
Dim title As String
Dim titlerow As Integer

Set ws = Sheets("Data")
lr = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
title = "A1:BF1"
titlerow = ws.Range(title).Cells(1).Row
icol = ws.Columns.Count

ws.Range("A" & titlerow & ":A" & lr).EntireRow.Copy Sheets("AS_NoPays").Range("A1")

Sheets("AS_NoPays").Activate
' End code to move data into separate worksheets

'delete extra columns
Columns("G:I").EntireColumn.delete
Columns("J:L").EntireColumn.delete
Columns("M:O").EntireColumn.delete
Columns("P:R").EntireColumn.delete
Columns("W:Z").EntireColumn.delete
Columns("AA:AD").EntireColumn.delete
Columns("AE:AF").EntireColumn.delete
Columns("AI:AJ").EntireColumn.delete

Sheets("Data").Columns.AutoFit
Sheets("AS_NoPays").Columns.AutoFit

Sheets("Introduction").Activate

'Screen updating and alerts on
Application.ScreenUpdating = True
Application.DisplayAlerts = True

End Sub



